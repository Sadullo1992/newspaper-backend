version: "3.8"
services:
  frontend:
    container_name: frontend
    restart: unless-stopped
    build: ./frontend-for-admin
    ports:
      - ${PORT_FE}:${PORT_FE}
    depends_on:
      - backend
    env_file:
      - .env
    environment:
      PORT: ${PORT}
    volumes:
      - ./:/usr/frontend
      - ignore_fe:/usr/frontend/node_modules
    networks:
      - app-network
  backend:
    container_name: backend
    restart: unless-stopped
    build: ./backend
    ports:
      - ${PORT}:${PORT}
    # depends_on:
    #   - db
    env_file:
      - .env
    environment:
      PORT: ${PORT}
    volumes:
      - ./:/usr/backend
      - ignore_be:/usr/backend/node_modules
    networks:
      - app-network
  # db:
  #   container_name: db
  #   restart: unless-stopped
  #   build: ./database/
  #   ports:
  #     - ${POSTGRES_PORT}:${POSTGRES_PORT}
  #   env_file:
  #     - .env
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_HOST: ${POSTGRES_HOST}
  #   command: ['-c', 'logging_collector=on']
  #   networks:
  #     - app-network
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data

networks:
  app-network:
    driver: bridge

volumes:
  ignore_fe:
  ignore_be:
  # pgdata:
